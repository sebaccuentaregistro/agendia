#!/bin/bash
# Script de Reseteo de Emergencia

# Mensaje de Advertencia
echo "ðŸ›‘ Â¡ATENCIÃ“N! Este script es una medida de emergencia."
echo "Se eliminarÃ¡n todos los cambios locales no guardados en tu repositorio de GitHub."
echo "Esto incluye archivos nuevos o modificados que no hayas 'commiteado'."
echo "El objetivo es restaurar el proyecto a un estado limpio y conocido."
echo ""
read -p "Â¿EstÃ¡s completamente seguro de que quieres continuar? (s/n): " confirmacion

if [[ "$confirmacion" != "s" && "$confirmacion" != "S" ]]; then
    echo "OperaciÃ³n cancelada."
    exit 0
fi

echo "âœ… ConfirmaciÃ³n recibida. Iniciando reseteo..."

# 1. Descartar todos los cambios locales.
# - 'git reset --hard' fuerza la restauraciÃ³n de todos los archivos al Ãºltimo commit.
echo "ðŸ”„ Descartando todos los cambios locales y volviendo al Ãºltimo commit..."
git reset --hard HEAD

# 2. Limpiar archivos no rastreados.
# - 'git clean -fd' elimina forzosamente todos los archivos y directorios que no estÃ¡n en el repositorio.
# Esto es crucial para eliminar archivos de cachÃ© o compilaciones rotas.
echo "ðŸ§¹ Limpiando archivos y carpetas no rastreados (como node_modules y builds fallidos)..."
git clean -fd

# 3. Forzar la reinstalaciÃ³n de las dependencias.
# Al haber eliminado node_modules, este comando es esencial.
echo "ðŸ“¦ Forzando la reinstalaciÃ³n de todas las dependencias desde package.json..."
npm install

echo "âœ… Â¡Reseteo completado! El proyecto ha sido restaurado."
echo "El servidor de desarrollo se reiniciarÃ¡ automÃ¡ticamente. Por favor, espera un momento..."
