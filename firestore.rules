rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user making the request exists in our users collection.
    function userExists(userId) {
      return exists(/databases/$(database)/documents/users/$(userId));
    }

    // Helper function to get the institute ID for the currently authenticated user.
    function getInstituteId() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.instituteId;
    }

    // Secure the users collection.
    match /users/{userId} {
      // A user can only read or update their own profile.
      // A user cannot create their own profile directly; it's done via signup.
      // A user cannot delete their own profile.
      allow read, update: if request.auth.uid == userId;
    }

    // Secure the institutes collection. All data is nested under an institute.
    match /institutes/{instituteId}/{document=**} {
      // Allow read/write only if the user is authenticated and belongs to the institute
      // they are trying to access.
      allow read, write: if request.auth != null && getInstituteId() == instituteId;
    }
  }
}
