rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      // A user can create their own profile during signup.
      allow create: if request.auth.uid == userId;
    }
    
    // This rule allows a user to create an institute document for themselves.
    // It's the key to enabling automatic signup.
    match /institutes/{instituteId} {
        // Only allow creation if the user is authenticated and is the owner.
        allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.ownerId;
        
        // Allow reads and updates if the user belongs to that institute.
        // This is important for fetching institute details like its name.
        allow read, update: if request.auth.uid != null && getUserData().instituteId == instituteId;
        
        // Disallow deleting an institute directly for safety.
        allow delete: if false;
    }

    // This rule secures all the sub-collections (people, sessions, etc.) within an institute.
    match /institutes/{instituteId}/{document=**} {
      // A user can only access documents if their profile's instituteId matches.
      allow read, write: if request.auth != null && getUserData().instituteId == instituteId;
    }
  }
}
